name: build Prerelease
on:
  workflow_dispatch:
  push:
    branches:
      - WSS
jobs:
  BuildPreRelease:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      
      - name: checkout submodules
        run: git submodule update --init --recursive --remote

      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: setup GO
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: signing properties
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: |
          touch signing.properties
          echo keystore.password="$SIGNING_STORE_PASSWORD" > signing.properties
          echo key.alias="$SIGNING_KEY_ALIAS" >> signing.properties
          echo key.password="$SIGNING_KEY_PASSWORD" >> signing.properties
            
          echo "cat signing.properties"
          cat signing.properties

      - name: pre-release build
        if: success()
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --no-daemon app:assembleMeta-AlphaRelease

      - name: delete current release assets
        uses: andreaswilli/delete-release-assets-action@v2.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: Prerelease-alpha
          deleteOnlyFromDrafts: false

      - name: tag repo
        uses: richardsimko/update-tag@v1
        with:
          tag_name: Prerelease-alpha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        with:
         name: APKs
         path: app/build/outputs/apk/meta-alpha/release/*

      - name: upload alpha
        uses: softprops/action-gh-release@v1
        if: ${{  success() }}
        with:
          tag: ${{ github.ref_name }}
          tag_name: Prerelease-alpha
          files: app/build/outputs/apk/meta-alpha/release/*
          prerelease: true
          generate_release_notes: false

  Upload:
    name: telegram upload Release
    runs-on: ubuntu-latest
    needs: BuildPreRelease
    steps:
      - name: donwload artifacts
        uses: actions/download-artifact@v2
        with:
          name: APKs
          path: artifacts
      - name: Release
        run: |
          mkdir apks
          find artifacts -name "*.apk" -exec cp {} apks \;
          
          function upload() {
            for clash in $@; do
              echo ">> Uploading $clash"
              curl https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument \
                -X POST \
                -F chat_id="${{ secrets.TELEGRAM_CHANNEL }}" \
                -F document="@$clash" \
                --silent --show-error --fail >/dev/null &
            done
            for job in $(jobs -p); do
              wait $job || exit 1
            done
          }
          upload apks/*

  Delete:
    name: delete workflow
    runs-on: ubuntu-latest
    needs: BuildPreRelease
    steps:
      - name: delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0